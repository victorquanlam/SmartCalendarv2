{"version":3,"sources":["node_modules/tslib/tslib.es6.js","ng://angular-resizable-element/resizable.directive.ts","ng://angular-resizable-element/resize-handle.directive.ts","ng://angular-resizable-element/resizable.module.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__read","o","m","Symbol","iterator","r","e","ar","next","done","push","value","error","isNumberCloseTo","value1","value2","precision","Math","abs","getNewBoundingRectangle","startingRect","edges","clientX","clientY","newBoundingRect","top","bottom","left","right","height","width","isWithinBoundingY","_a","rect","isWithinBoundingX","getResizeEdges","elm","allowedEdges","cursorPrecision","elmPosition","nativeElement","getBoundingClientRect","DEFAULT_RESIZE_CURSORS","freeze","topLeft","topRight","bottomLeft","bottomRight","leftOrRight","topOrBottom","getResizeCursor","cursors","getEdgesDiff","initialRectangle","newRectangle","edgesDiff","keys","forEach","edge","RESIZE_ACTIVE_CLASS","ResizableDirective","platformId","renderer","zone","resizeEdges","enableGhostResize","resizeSnapGrid","resizeCursors","resizeCursorPrecision","ghostElementPositioning","allowNegativeResizes","resizeStart","EventEmitter","resizing","resizeEnd","mouseup","Subject","mousedown","mousemove","destroy$","resizeEdges$","pointerEventListeners","PointerEventListeners","getInstance","ngOnInit","currentResize","_this","mousedown$","merge","pointerDown","mousemove$","pointerMove","pipe","tap","event","preventDefault","share","mouseup$","pointerUp","removeGhostElement","clonedNode","parentElement","removeChild","setStyle","getResizeCursors","startWith","map","some","switchMap","legacyResizeEdgesEnabled","EMPTY","auditTime","takeUntil","subscribe","cursor","setElementClass","mergeMap","startCoords","getDiff","moveCoords","getSnapGrid","snapGrid","x","y","getGrid","coords","ceil","take","pairwise","_b","previousCoords","newCoords","filter","previousGrid","newGrid","round","validateResize","rectangle","run","emit","currentRect","getElementRect","element","translateX","translateY","style","transform","property","find","includes","replace","offsetHeight","offsetWidth","offsetTop","offsetLeft","boundingRect","scrollTop","scrollLeft","document","body","cloneNode","appendChild","addClass","removeClass","ngOnChanges","changes","ngOnDestroy","isPlatformBrowser","complete","name","add","Directive","args","selector","Inject","PLATFORM_ID","Renderer2","ElementRef","NgZone","Input","Output","Observable","observer","unsubscribeMouseDown","unsubscribeTouchStart","runOutsideAngular","listen","touches","unsubscribeMouseMove","unsubscribeTouchMove","targetTouches","unsubscribeMouseUp","unsubscribeTouchEnd","unsubscribeTouchCancel","changedTouches","instance","ResizeHandleDirective","resizable","eventListeners","unsubscribeEventListeners","onMousedown","touchmove","touchMoveEvent","onMousemove","mouseMoveEvent","onMouseup","type","HostListener","ResizableModule","NgModule","declarations","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import {\n  Directive,\n  Renderer2,\n  ElementRef,\n  OnInit,\n  Output,\n  Input,\n  EventEmitter,\n  OnDestroy,\n  NgZone,\n  OnChanges,\n  SimpleChanges,\n  Inject,\n  PLATFORM_ID\n} from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { Subject, Observable, Observer, merge, EMPTY } from 'rxjs';\nimport {\n  map,\n  mergeMap,\n  takeUntil,\n  filter,\n  pairwise,\n  take,\n  share,\n  auditTime,\n  switchMap,\n  startWith,\n  tap\n} from 'rxjs/operators';\nimport { Edges } from './interfaces/edges.interface';\nimport { BoundingRectangle } from './interfaces/bounding-rectangle.interface';\nimport { ResizeEvent } from './interfaces/resize-event.interface';\n\ninterface PointerEventCoordinate {\n  clientX: number;\n  clientY: number;\n  event: MouseEvent | TouchEvent;\n}\n\ninterface Coordinate {\n  x: number;\n  y: number;\n}\n\nfunction isNumberCloseTo(\n  value1: number,\n  value2: number,\n  precision: number = 3\n): boolean {\n  const diff: number = Math.abs(value1 - value2);\n  return diff < precision;\n}\n\nfunction getNewBoundingRectangle(\n  startingRect: BoundingRectangle,\n  edges: Edges,\n  clientX: number,\n  clientY: number\n): BoundingRectangle {\n  const newBoundingRect: BoundingRectangle = {\n    top: startingRect.top,\n    bottom: startingRect.bottom,\n    left: startingRect.left,\n    right: startingRect.right\n  };\n\n  if (edges.top) {\n    newBoundingRect.top += clientY;\n  }\n  if (edges.bottom) {\n    newBoundingRect.bottom += clientY;\n  }\n  if (edges.left) {\n    newBoundingRect.left += clientX;\n  }\n  if (edges.right) {\n    newBoundingRect.right += clientX;\n  }\n  newBoundingRect.height = newBoundingRect.bottom - newBoundingRect.top;\n  newBoundingRect.width = newBoundingRect.right - newBoundingRect.left;\n\n  return newBoundingRect;\n}\n\nfunction getElementRect(\n  element: ElementRef,\n  ghostElementPositioning: string\n): BoundingRectangle {\n  let translateX = 0;\n  let translateY = 0;\n  const style = element.nativeElement.style;\n  const transformProperties = [\n    'transform',\n    '-ms-transform',\n    '-moz-transform',\n    '-o-transform'\n  ];\n  const transform = transformProperties\n    .map(property => style[property])\n    .find(value => !!value);\n  if (transform && transform.includes('translate')) {\n    translateX = transform.replace(/.*translate\\((.*)px, (.*)px\\).*/, '$1');\n    translateY = transform.replace(/.*translate\\((.*)px, (.*)px\\).*/, '$2');\n  }\n\n  if (ghostElementPositioning === 'absolute') {\n    return {\n      height: element.nativeElement.offsetHeight,\n      width: element.nativeElement.offsetWidth,\n      top: element.nativeElement.offsetTop - translateY,\n      bottom:\n        element.nativeElement.offsetHeight +\n        element.nativeElement.offsetTop -\n        translateY,\n      left: element.nativeElement.offsetLeft - translateX,\n      right:\n        element.nativeElement.offsetWidth +\n        element.nativeElement.offsetLeft -\n        translateX\n    };\n  } else {\n    const boundingRect: BoundingRectangle = element.nativeElement.getBoundingClientRect();\n    return {\n      height: boundingRect.height,\n      width: boundingRect.width,\n      top: boundingRect.top - translateY,\n      bottom: boundingRect.bottom - translateY,\n      left: boundingRect.left - translateX,\n      right: boundingRect.right - translateX,\n      scrollTop: element.nativeElement.scrollTop,\n      scrollLeft: element.nativeElement.scrollLeft\n    };\n  }\n}\n\nfunction isWithinBoundingY({\n  clientY,\n  rect\n}: {\n  clientY: number;\n  rect: ClientRect;\n}): boolean {\n  return clientY >= rect.top && clientY <= rect.bottom;\n}\n\nfunction isWithinBoundingX({\n  clientX,\n  rect\n}: {\n  clientX: number;\n  rect: ClientRect;\n}): boolean {\n  return clientX >= rect.left && clientX <= rect.right;\n}\n\nfunction getResizeEdges({\n  clientX,\n  clientY,\n  elm,\n  allowedEdges,\n  cursorPrecision\n}: {\n  clientX: number;\n  clientY: number;\n  elm: ElementRef;\n  allowedEdges: Edges;\n  cursorPrecision: number;\n}): Edges {\n  const elmPosition: ClientRect = elm.nativeElement.getBoundingClientRect();\n  const edges: Edges = {};\n\n  if (\n    allowedEdges.left &&\n    isNumberCloseTo(clientX, elmPosition.left, cursorPrecision) &&\n    isWithinBoundingY({ clientY, rect: elmPosition })\n  ) {\n    edges.left = true;\n  }\n\n  if (\n    allowedEdges.right &&\n    isNumberCloseTo(clientX, elmPosition.right, cursorPrecision) &&\n    isWithinBoundingY({ clientY, rect: elmPosition })\n  ) {\n    edges.right = true;\n  }\n\n  if (\n    allowedEdges.top &&\n    isNumberCloseTo(clientY, elmPosition.top, cursorPrecision) &&\n    isWithinBoundingX({ clientX, rect: elmPosition })\n  ) {\n    edges.top = true;\n  }\n\n  if (\n    allowedEdges.bottom &&\n    isNumberCloseTo(clientY, elmPosition.bottom, cursorPrecision) &&\n    isWithinBoundingX({ clientX, rect: elmPosition })\n  ) {\n    edges.bottom = true;\n  }\n\n  return edges;\n}\n\nexport interface ResizeCursors {\n  topLeft: string;\n  topRight: string;\n  bottomLeft: string;\n  bottomRight: string;\n  leftOrRight: string;\n  topOrBottom: string;\n}\n\nconst DEFAULT_RESIZE_CURSORS: ResizeCursors = Object.freeze({\n  topLeft: 'nw-resize',\n  topRight: 'ne-resize',\n  bottomLeft: 'sw-resize',\n  bottomRight: 'se-resize',\n  leftOrRight: 'col-resize',\n  topOrBottom: 'row-resize'\n});\n\nfunction getResizeCursor(edges: Edges, cursors: ResizeCursors): string {\n  if (edges.left && edges.top) {\n    return cursors.topLeft;\n  } else if (edges.right && edges.top) {\n    return cursors.topRight;\n  } else if (edges.left && edges.bottom) {\n    return cursors.bottomLeft;\n  } else if (edges.right && edges.bottom) {\n    return cursors.bottomRight;\n  } else if (edges.left || edges.right) {\n    return cursors.leftOrRight;\n  } else if (edges.top || edges.bottom) {\n    return cursors.topOrBottom;\n  } else {\n    return '';\n  }\n}\n\nfunction getEdgesDiff({\n  edges,\n  initialRectangle,\n  newRectangle\n}: {\n  edges: Edges;\n  initialRectangle: BoundingRectangle;\n  newRectangle: BoundingRectangle;\n}): Edges {\n  const edgesDiff: Edges = {};\n  Object.keys(edges).forEach(edge => {\n    edgesDiff[edge] = (newRectangle[edge] || 0) - (initialRectangle[edge] || 0);\n  });\n  return edgesDiff;\n}\n\nconst RESIZE_ACTIVE_CLASS: string = 'resize-active';\nconst RESIZE_LEFT_HOVER_CLASS: string = 'resize-left-hover';\nconst RESIZE_RIGHT_HOVER_CLASS: string = 'resize-right-hover';\nconst RESIZE_TOP_HOVER_CLASS: string = 'resize-top-hover';\nconst RESIZE_BOTTOM_HOVER_CLASS: string = 'resize-bottom-hover';\nconst RESIZE_GHOST_ELEMENT_CLASS: string = 'resize-ghost-element';\n\nexport const MOUSE_MOVE_THROTTLE_MS: number = 50;\n\n/**\n * Place this on an element to make it resizable. For example:\n *\n * ```html\n * <div\n *   mwlResizable\n *   [resizeEdges]=\"{bottom: true, right: true, top: true, left: true}\"\n *   [enableGhostResize]=\"true\">\n * </div>\n * ```\n */\n@Directive({\n  selector: '[mwlResizable]'\n})\nexport class ResizableDirective implements OnInit, OnChanges, OnDestroy {\n  /**\n   * A function that will be called before each resize event. Return `true` to allow the resize event to propagate or `false` to cancel it\n   */\n  @Input() validateResize: (resizeEvent: ResizeEvent) => boolean;\n\n  /**\n   * The edges that an element can be resized from. Pass an object like `{top: true, bottom: false}`. By default no edges can be resized.\n   * @deprecated use a resize handle instead that positions itself to the side of the element you would like to resize\n   */\n  @Input() resizeEdges: Edges = {};\n\n  /**\n   * Set to `true` to enable a temporary resizing effect of the element in between the `resizeStart` and `resizeEnd` events.\n   */\n  @Input() enableGhostResize: boolean = false;\n\n  /**\n   * A snap grid that resize events will be locked to.\n   *\n   * e.g. to only allow the element to be resized every 10px set it to `{left: 10, right: 10}`\n   */\n  @Input() resizeSnapGrid: Edges = {};\n\n  /**\n   * The mouse cursors that will be set on the resize edges\n   */\n  @Input() resizeCursors: ResizeCursors = DEFAULT_RESIZE_CURSORS;\n\n  /**\n   * Mouse over thickness to active cursor.\n   * @deprecated invalid when you migrate to use resize handles instead of setting resizeEdges on the element\n   */\n  @Input() resizeCursorPrecision: number = 3;\n\n  /**\n   * Define the positioning of the ghost element (can be fixed or absolute)\n   */\n  @Input() ghostElementPositioning: 'fixed' | 'absolute' = 'fixed';\n\n  /**\n   * Allow elements to be resized to negative dimensions\n   */\n  @Input() allowNegativeResizes: boolean = false;\n\n  /**\n   * Called when the mouse is pressed and a resize event is about to begin. `$event` is a `ResizeEvent` object.\n   */\n  @Output() resizeStart = new EventEmitter<ResizeEvent>();\n\n  /**\n   * Called as the mouse is dragged after a resize event has begun. `$event` is a `ResizeEvent` object.\n   */\n  @Output() resizing = new EventEmitter<ResizeEvent>();\n\n  /**\n   * Called after the mouse is released after a resize event. `$event` is a `ResizeEvent` object.\n   */\n  @Output() resizeEnd = new EventEmitter<ResizeEvent>();\n\n  /**\n   * @hidden\n   */\n  public mouseup = new Subject<{\n    clientX: number;\n    clientY: number;\n    edges?: Edges;\n  }>();\n\n  /**\n   * @hidden\n   */\n  public mousedown = new Subject<{\n    clientX: number;\n    clientY: number;\n    edges?: Edges;\n  }>();\n\n  /**\n   * @hidden\n   */\n  public mousemove = new Subject<{\n    clientX: number;\n    clientY: number;\n    edges?: Edges;\n    event: MouseEvent | TouchEvent;\n  }>();\n\n  private pointerEventListeners: PointerEventListeners;\n\n  private destroy$ = new Subject<void>();\n\n  private resizeEdges$ = new Subject<Edges>();\n\n  /**\n   * @hidden\n   */\n  constructor(\n    @Inject(PLATFORM_ID) private platformId: any,\n    private renderer: Renderer2,\n    public elm: ElementRef,\n    private zone: NgZone\n  ) {\n    this.pointerEventListeners = PointerEventListeners.getInstance(\n      renderer,\n      zone\n    );\n  }\n\n  /**\n   * @hidden\n   */\n  ngOnInit(): void {\n    const mousedown$: Observable<{\n      clientX: number;\n      clientY: number;\n      edges?: Edges;\n    }> = merge(this.pointerEventListeners.pointerDown, this.mousedown);\n\n    const mousemove$ = merge(\n      this.pointerEventListeners.pointerMove,\n      this.mousemove\n    ).pipe(\n      tap(({ event }) => {\n        if (currentResize) {\n          event.preventDefault();\n        }\n      }),\n      share()\n    );\n\n    const mouseup$ = merge(this.pointerEventListeners.pointerUp, this.mouseup);\n\n    let currentResize: {\n      edges: Edges;\n      startingRect: BoundingRectangle;\n      currentRect: BoundingRectangle;\n      clonedNode?: HTMLElement;\n    } | null;\n\n    const removeGhostElement = () => {\n      if (currentResize && currentResize.clonedNode) {\n        this.elm.nativeElement.parentElement.removeChild(\n          currentResize.clonedNode\n        );\n        this.renderer.setStyle(this.elm.nativeElement, 'visibility', 'inherit');\n      }\n    };\n\n    const getResizeCursors = (): ResizeCursors => {\n      return {\n        ...DEFAULT_RESIZE_CURSORS,\n        ...this.resizeCursors\n      };\n    };\n\n    this.resizeEdges$\n      .pipe(\n        startWith(this.resizeEdges),\n        map(() => {\n          return (\n            this.resizeEdges &&\n            Object.keys(this.resizeEdges).some(edge => !!this.resizeEdges[edge])\n          );\n        }),\n        switchMap(legacyResizeEdgesEnabled =>\n          legacyResizeEdgesEnabled ? mousemove$ : EMPTY\n        ),\n        auditTime(MOUSE_MOVE_THROTTLE_MS),\n        takeUntil(this.destroy$)\n      )\n      .subscribe(({ clientX, clientY }) => {\n        const resizeEdges: Edges = getResizeEdges({\n          clientX,\n          clientY,\n          elm: this.elm,\n          allowedEdges: this.resizeEdges,\n          cursorPrecision: this.resizeCursorPrecision\n        });\n        const resizeCursors = getResizeCursors();\n        if (!currentResize) {\n          const cursor = getResizeCursor(resizeEdges, resizeCursors);\n          this.renderer.setStyle(this.elm.nativeElement, 'cursor', cursor);\n        }\n        this.setElementClass(\n          this.elm,\n          RESIZE_LEFT_HOVER_CLASS,\n          resizeEdges.left === true\n        );\n        this.setElementClass(\n          this.elm,\n          RESIZE_RIGHT_HOVER_CLASS,\n          resizeEdges.right === true\n        );\n        this.setElementClass(\n          this.elm,\n          RESIZE_TOP_HOVER_CLASS,\n          resizeEdges.top === true\n        );\n        this.setElementClass(\n          this.elm,\n          RESIZE_BOTTOM_HOVER_CLASS,\n          resizeEdges.bottom === true\n        );\n      });\n\n    const mousedrag: Observable<any> = mousedown$\n      .pipe(\n        mergeMap(startCoords => {\n          function getDiff(moveCoords: { clientX: number; clientY: number }) {\n            return {\n              clientX: moveCoords.clientX - startCoords.clientX,\n              clientY: moveCoords.clientY - startCoords.clientY\n            };\n          }\n\n          const getSnapGrid = () => {\n            const snapGrid: Coordinate = { x: 1, y: 1 };\n\n            if (currentResize) {\n              if (this.resizeSnapGrid.left && currentResize.edges.left) {\n                snapGrid.x = +this.resizeSnapGrid.left;\n              } else if (\n                this.resizeSnapGrid.right &&\n                currentResize.edges.right\n              ) {\n                snapGrid.x = +this.resizeSnapGrid.right;\n              }\n\n              if (this.resizeSnapGrid.top && currentResize.edges.top) {\n                snapGrid.y = +this.resizeSnapGrid.top;\n              } else if (\n                this.resizeSnapGrid.bottom &&\n                currentResize.edges.bottom\n              ) {\n                snapGrid.y = +this.resizeSnapGrid.bottom;\n              }\n            }\n\n            return snapGrid;\n          };\n\n          function getGrid(\n            coords: { clientX: number; clientY: number },\n            snapGrid: Coordinate\n          ) {\n            return {\n              x: Math.ceil(coords.clientX / snapGrid.x),\n              y: Math.ceil(coords.clientY / snapGrid.y)\n            };\n          }\n\n          return (merge(\n            mousemove$.pipe(take(1)).pipe(map(coords => [, coords])),\n            mousemove$.pipe(pairwise())\n          ) as Observable<\n            [\n              { clientX: number; clientY: number },\n              { clientX: number; clientY: number }\n            ]\n          >)\n            .pipe(\n              map(([previousCoords, newCoords]) => {\n                return [\n                  previousCoords ? getDiff(previousCoords) : previousCoords,\n                  getDiff(newCoords)\n                ];\n              })\n            )\n            .pipe(\n              filter(([previousCoords, newCoords]) => {\n                if (!previousCoords) {\n                  return true;\n                }\n\n                const snapGrid: Coordinate = getSnapGrid();\n                const previousGrid: Coordinate = getGrid(\n                  previousCoords,\n                  snapGrid\n                );\n                const newGrid: Coordinate = getGrid(newCoords, snapGrid);\n\n                return (\n                  previousGrid.x !== newGrid.x || previousGrid.y !== newGrid.y\n                );\n              })\n            )\n            .pipe(\n              map(([, newCoords]) => {\n                const snapGrid: Coordinate = getSnapGrid();\n                return {\n                  clientX:\n                    Math.round(newCoords.clientX / snapGrid.x) * snapGrid.x,\n                  clientY:\n                    Math.round(newCoords.clientY / snapGrid.y) * snapGrid.y\n                };\n              })\n            )\n            .pipe(takeUntil(merge(mouseup$, mousedown$)));\n        })\n      )\n      .pipe(filter(() => !!currentResize));\n\n    mousedrag\n      .pipe(\n        map(({ clientX, clientY }) => {\n          return getNewBoundingRectangle(\n            currentResize!.startingRect,\n            currentResize!.edges,\n            clientX,\n            clientY\n          );\n        })\n      )\n      .pipe(\n        filter((newBoundingRect: BoundingRectangle) => {\n          return (\n            this.allowNegativeResizes ||\n            !!(\n              newBoundingRect.height &&\n              newBoundingRect.width &&\n              newBoundingRect.height > 0 &&\n              newBoundingRect.width > 0\n            )\n          );\n        })\n      )\n      .pipe(\n        filter((newBoundingRect: BoundingRectangle) => {\n          return this.validateResize\n            ? this.validateResize({\n                rectangle: newBoundingRect,\n                edges: getEdgesDiff({\n                  edges: currentResize!.edges,\n                  initialRectangle: currentResize!.startingRect,\n                  newRectangle: newBoundingRect\n                })\n              })\n            : true;\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe((newBoundingRect: BoundingRectangle) => {\n        if (currentResize && currentResize.clonedNode) {\n          this.renderer.setStyle(\n            currentResize.clonedNode,\n            'height',\n            `${newBoundingRect.height}px`\n          );\n          this.renderer.setStyle(\n            currentResize.clonedNode,\n            'width',\n            `${newBoundingRect.width}px`\n          );\n          this.renderer.setStyle(\n            currentResize.clonedNode,\n            'top',\n            `${newBoundingRect.top}px`\n          );\n          this.renderer.setStyle(\n            currentResize.clonedNode,\n            'left',\n            `${newBoundingRect.left}px`\n          );\n        }\n\n        this.zone.run(() => {\n          this.resizing.emit({\n            edges: getEdgesDiff({\n              edges: currentResize!.edges,\n              initialRectangle: currentResize!.startingRect,\n              newRectangle: newBoundingRect\n            }),\n            rectangle: newBoundingRect\n          });\n        });\n\n        currentResize!.currentRect = newBoundingRect;\n      });\n\n    mousedown$\n      .pipe(\n        map(({ clientX, clientY, edges }) => {\n          return (\n            edges ||\n            getResizeEdges({\n              clientX,\n              clientY,\n              elm: this.elm,\n              allowedEdges: this.resizeEdges,\n              cursorPrecision: this.resizeCursorPrecision\n            })\n          );\n        })\n      )\n      .pipe(\n        filter((edges: Edges) => {\n          return Object.keys(edges).length > 0;\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe((edges: Edges) => {\n        if (currentResize) {\n          removeGhostElement();\n        }\n        const startingRect: BoundingRectangle = getElementRect(\n          this.elm,\n          this.ghostElementPositioning\n        );\n        currentResize = {\n          edges,\n          startingRect,\n          currentRect: startingRect\n        };\n        const resizeCursors = getResizeCursors();\n        const cursor = getResizeCursor(currentResize.edges, resizeCursors);\n        this.renderer.setStyle(document.body, 'cursor', cursor);\n        this.setElementClass(this.elm, RESIZE_ACTIVE_CLASS, true);\n        if (this.enableGhostResize) {\n          currentResize.clonedNode = this.elm.nativeElement.cloneNode(true);\n          this.elm.nativeElement.parentElement.appendChild(\n            currentResize.clonedNode\n          );\n          this.renderer.setStyle(\n            this.elm.nativeElement,\n            'visibility',\n            'hidden'\n          );\n          this.renderer.setStyle(\n            currentResize.clonedNode,\n            'position',\n            this.ghostElementPositioning\n          );\n          this.renderer.setStyle(\n            currentResize.clonedNode,\n            'left',\n            `${currentResize.startingRect.left}px`\n          );\n          this.renderer.setStyle(\n            currentResize.clonedNode,\n            'top',\n            `${currentResize.startingRect.top}px`\n          );\n          this.renderer.setStyle(\n            currentResize.clonedNode,\n            'height',\n            `${currentResize.startingRect.height}px`\n          );\n          this.renderer.setStyle(\n            currentResize.clonedNode,\n            'width',\n            `${currentResize.startingRect.width}px`\n          );\n          this.renderer.setStyle(\n            currentResize.clonedNode,\n            'cursor',\n            getResizeCursor(currentResize.edges, resizeCursors)\n          );\n          this.renderer.addClass(\n            currentResize.clonedNode,\n            RESIZE_GHOST_ELEMENT_CLASS\n          );\n          currentResize.clonedNode!.scrollTop = currentResize.startingRect\n            .scrollTop as number;\n          currentResize.clonedNode!.scrollLeft = currentResize.startingRect\n            .scrollLeft as number;\n        }\n        this.zone.run(() => {\n          this.resizeStart.emit({\n            edges: getEdgesDiff({\n              edges,\n              initialRectangle: startingRect,\n              newRectangle: startingRect\n            }),\n            rectangle: getNewBoundingRectangle(startingRect, {}, 0, 0)\n          });\n        });\n      });\n\n    mouseup$.pipe(takeUntil(this.destroy$)).subscribe(() => {\n      if (currentResize) {\n        this.renderer.removeClass(this.elm.nativeElement, RESIZE_ACTIVE_CLASS);\n        this.renderer.setStyle(document.body, 'cursor', '');\n        this.renderer.setStyle(this.elm.nativeElement, 'cursor', '');\n        this.zone.run(() => {\n          this.resizeEnd.emit({\n            edges: getEdgesDiff({\n              edges: currentResize!.edges,\n              initialRectangle: currentResize!.startingRect,\n              newRectangle: currentResize!.currentRect\n            }),\n            rectangle: currentResize!.currentRect\n          });\n        });\n        removeGhostElement();\n        currentResize = null;\n      }\n    });\n  }\n\n  /**\n   * @hidden\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.resizeEdges) {\n      this.resizeEdges$.next(this.resizeEdges);\n    }\n  }\n\n  /**\n   * @hidden\n   */\n  ngOnDestroy(): void {\n    // browser check for angular universal, because it doesn't know what document is\n    if (isPlatformBrowser(this.platformId)) {\n      this.renderer.setStyle(document.body, 'cursor', '');\n    }\n    this.mousedown.complete();\n    this.mouseup.complete();\n    this.mousemove.complete();\n    this.resizeEdges$.complete();\n    this.destroy$.next();\n  }\n\n  private setElementClass(elm: ElementRef, name: string, add: boolean): void {\n    if (add) {\n      this.renderer.addClass(elm.nativeElement, name);\n    } else {\n      this.renderer.removeClass(elm.nativeElement, name);\n    }\n  }\n}\n\nclass PointerEventListeners {\n  public pointerDown: Observable<PointerEventCoordinate>;\n\n  public pointerMove: Observable<PointerEventCoordinate>;\n\n  public pointerUp: Observable<PointerEventCoordinate>;\n\n  private static instance: PointerEventListeners; // tslint:disable-line\n\n  public static getInstance(\n    renderer: Renderer2,\n    zone: NgZone\n  ): PointerEventListeners {\n    if (!PointerEventListeners.instance) {\n      PointerEventListeners.instance = new PointerEventListeners(\n        renderer,\n        zone\n      );\n    }\n    return PointerEventListeners.instance;\n  }\n\n  constructor(renderer: Renderer2, zone: NgZone) {\n    this.pointerDown = new Observable(\n      (observer: Observer<PointerEventCoordinate>) => {\n        let unsubscribeMouseDown: () => void;\n        let unsubscribeTouchStart: () => void;\n\n        zone.runOutsideAngular(() => {\n          unsubscribeMouseDown = renderer.listen(\n            'document',\n            'mousedown',\n            (event: MouseEvent) => {\n              observer.next({\n                clientX: event.clientX,\n                clientY: event.clientY,\n                event\n              });\n            }\n          );\n\n          unsubscribeTouchStart = renderer.listen(\n            'document',\n            'touchstart',\n            (event: TouchEvent) => {\n              observer.next({\n                clientX: event.touches[0].clientX,\n                clientY: event.touches[0].clientY,\n                event\n              });\n            }\n          );\n        });\n\n        return () => {\n          unsubscribeMouseDown();\n          unsubscribeTouchStart();\n        };\n      }\n    ).pipe(share());\n\n    this.pointerMove = new Observable(\n      (observer: Observer<PointerEventCoordinate>) => {\n        let unsubscribeMouseMove: () => void;\n        let unsubscribeTouchMove: () => void;\n\n        zone.runOutsideAngular(() => {\n          unsubscribeMouseMove = renderer.listen(\n            'document',\n            'mousemove',\n            (event: MouseEvent) => {\n              observer.next({\n                clientX: event.clientX,\n                clientY: event.clientY,\n                event\n              });\n            }\n          );\n\n          unsubscribeTouchMove = renderer.listen(\n            'document',\n            'touchmove',\n            (event: TouchEvent) => {\n              observer.next({\n                clientX: event.targetTouches[0].clientX,\n                clientY: event.targetTouches[0].clientY,\n                event\n              });\n            }\n          );\n        });\n\n        return () => {\n          unsubscribeMouseMove();\n          unsubscribeTouchMove();\n        };\n      }\n    ).pipe(share());\n\n    this.pointerUp = new Observable(\n      (observer: Observer<PointerEventCoordinate>) => {\n        let unsubscribeMouseUp: () => void;\n        let unsubscribeTouchEnd: () => void;\n        let unsubscribeTouchCancel: () => void;\n\n        zone.runOutsideAngular(() => {\n          unsubscribeMouseUp = renderer.listen(\n            'document',\n            'mouseup',\n            (event: MouseEvent) => {\n              observer.next({\n                clientX: event.clientX,\n                clientY: event.clientY,\n                event\n              });\n            }\n          );\n\n          unsubscribeTouchEnd = renderer.listen(\n            'document',\n            'touchend',\n            (event: TouchEvent) => {\n              observer.next({\n                clientX: event.changedTouches[0].clientX,\n                clientY: event.changedTouches[0].clientY,\n                event\n              });\n            }\n          );\n\n          unsubscribeTouchCancel = renderer.listen(\n            'document',\n            'touchcancel',\n            (event: TouchEvent) => {\n              observer.next({\n                clientX: event.changedTouches[0].clientX,\n                clientY: event.changedTouches[0].clientY,\n                event\n              });\n            }\n          );\n        });\n\n        return () => {\n          unsubscribeMouseUp();\n          unsubscribeTouchEnd();\n          unsubscribeTouchCancel();\n        };\n      }\n    ).pipe(share());\n  }\n}\n","import {\n  Directive,\n  Input,\n  HostListener,\n  Renderer2,\n  ElementRef,\n  OnDestroy,\n  NgZone\n} from '@angular/core';\nimport { ResizableDirective } from './resizable.directive';\nimport { Edges } from './interfaces/edges.interface';\n\n/**\n * An element placed inside a `mwlResizable` directive to be used as a drag and resize handle\n *\n * For example\n *\n * ```html\n * <div mwlResizable>\n *   <div mwlResizeHandle [resizeEdges]=\"{bottom: true, right: true}\"></div>\n * </div>\n * ```\n */\n@Directive({\n  selector: '[mwlResizeHandle]'\n})\nexport class ResizeHandleDirective implements OnDestroy {\n  /**\n   * The `Edges` object that contains the edges of the parent element that dragging the handle will trigger a resize on\n   */\n  @Input() resizeEdges: Edges = {};\n\n  private eventListeners: {\n    touchmove?: () => void;\n    mousemove?: () => void;\n    [key: string]: (() => void) | undefined;\n  } = {};\n\n  constructor(\n    private renderer: Renderer2,\n    private element: ElementRef,\n    private zone: NgZone,\n    private resizable: ResizableDirective\n  ) {}\n\n  ngOnDestroy(): void {\n    this.unsubscribeEventListeners();\n  }\n\n  /**\n   * @hidden\n   */\n  @HostListener('touchstart', [\n    '$event',\n    '$event.touches[0].clientX',\n    '$event.touches[0].clientY'\n  ])\n  @HostListener('mousedown', ['$event', '$event.clientX', '$event.clientY'])\n  onMousedown(\n    event: MouseEvent | TouchEvent,\n    clientX: number,\n    clientY: number\n  ): void {\n    event.preventDefault();\n    this.zone.runOutsideAngular(() => {\n      if (!this.eventListeners.touchmove) {\n        this.eventListeners.touchmove = this.renderer.listen(\n          this.element.nativeElement,\n          'touchmove',\n          (touchMoveEvent: TouchEvent) => {\n            this.onMousemove(\n              touchMoveEvent,\n              touchMoveEvent.targetTouches[0].clientX,\n              touchMoveEvent.targetTouches[0].clientY\n            );\n          }\n        );\n      }\n      if (!this.eventListeners.mousemove) {\n        this.eventListeners.mousemove = this.renderer.listen(\n          this.element.nativeElement,\n          'mousemove',\n          (mouseMoveEvent: MouseEvent) => {\n            this.onMousemove(\n              mouseMoveEvent,\n              mouseMoveEvent.clientX,\n              mouseMoveEvent.clientY\n            );\n          }\n        );\n      }\n      this.resizable.mousedown.next({\n        clientX,\n        clientY,\n        edges: this.resizeEdges\n      });\n    });\n  }\n\n  /**\n   * @hidden\n   */\n  @HostListener('touchend', [\n    '$event.changedTouches[0].clientX',\n    '$event.changedTouches[0].clientY'\n  ])\n  @HostListener('touchcancel', [\n    '$event.changedTouches[0].clientX',\n    '$event.changedTouches[0].clientY'\n  ])\n  @HostListener('mouseup', ['$event.clientX', '$event.clientY'])\n  onMouseup(clientX: number, clientY: number): void {\n    this.zone.runOutsideAngular(() => {\n      this.unsubscribeEventListeners();\n      this.resizable.mouseup.next({\n        clientX,\n        clientY,\n        edges: this.resizeEdges\n      });\n    });\n  }\n\n  private onMousemove(\n    event: MouseEvent | TouchEvent,\n    clientX: number,\n    clientY: number\n  ): void {\n    this.resizable.mousemove.next({\n      clientX,\n      clientY,\n      edges: this.resizeEdges,\n      event\n    });\n  }\n\n  private unsubscribeEventListeners(): void {\n    Object.keys(this.eventListeners).forEach(type => {\n      (this as any).eventListeners[type]();\n      delete this.eventListeners[type];\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { ResizableDirective } from './resizable.directive';\nimport { ResizeHandleDirective } from './resize-handle.directive';\n\n@NgModule({\n  declarations: [ResizableDirective, ResizeHandleDirective],\n  exports: [ResizableDirective, ResizeHandleDirective]\n})\nexport class ResizableModule {}\n"]}